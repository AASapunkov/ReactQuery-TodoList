{"ast":null,"code":"import _styled from \"styled-components\";\n\nvar _jsxFileName = \"/Users/alexandersapunkov/Desktop/Projects/todo-react-query-presentation/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from 'react';\nimport { useQueryClient } from 'react-query';\nimport Alert from 'src/components/Alert';\nimport Container from 'src/components/Container';\nimport Form from 'src/components/Form';\nimport Loading from 'src/components/Loading';\nimport TodoList from 'src/components/TodoList';\nimport { qKeyTodo, qKeyTodoList } from 'src/constants';\nimport useCompleteTodoMutation from 'src/data/mutations/useCompleteTodoMutation';\nimport useCreateTodoMutation from 'src/data/mutations/useCreateTodoMutation';\nimport useRemoveTodoMutation from 'src/data/mutations/useRemoveTodoMutation';\nimport useTodosQuery from 'src/data/queries/useTodosQuery';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const queryClient = useQueryClient();\n  const {\n    remove\n  } = useRemoveTodoMutation();\n  const {\n    create\n  } = useCreateTodoMutation();\n  const {\n    complete\n  } = useCompleteTodoMutation();\n  const {\n    data,\n    isError,\n    isLoading\n  } = useTodosQuery();\n  const {\n    todoIdList = []\n  } = data || {};\n  const toggleCompleteFirstTask = useCallback(() => {\n    const cacheData = queryClient.getQueryData(qKeyTodoList()) || {};\n    const firstTodo = cacheData === null || cacheData === void 0 ? void 0 : cacheData.todoIdList[0];\n    if (!firstTodo) return;\n    queryClient.setQueryData(qKeyTodo(1), _data => ({ ..._data,\n      isComplete: !(_data !== null && _data !== void 0 && _data.isComplete)\n    }));\n  }, [queryClient]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [isError && /*#__PURE__*/_jsxDEV(Alert, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 19\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      todoIdList: todoIdList,\n      remove: remove,\n      complete: complete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      create: create\n    }, \"Form-query\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonToggleComplete, {\n      onClick: toggleCompleteFirstTask,\n      type: \"button\",\n      value: \"Toggle Complete first task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"QoYMmJp2Rft+Ydo6NUgzZFo5Esk=\", false, function () {\n  return [useQueryClient, useRemoveTodoMutation, useCreateTodoMutation, useCompleteTodoMutation, useTodosQuery];\n});\n\n_c = App;\nexport default App;\n\nconst ButtonToggleComplete = _styled.input.withConfig({\n  displayName: \"App__ButtonToggleComplete\",\n  componentId: \"sc-1lulopq-0\"\n})([\"display:flex;margin-top:1rem;width:100%;justify-content:center;padding:1rem;border-radius:20rem;background-color:#f9fafbff;box-shadow:-1px 7px 9px -5px rgba(0,0,0,0.37);color:#6b7280ff;border:none;:focus{outline:none;}:hover{background-color:#f87171ff;}\"]);\n\n_c2 = ButtonToggleComplete;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"ButtonToggleComplete\");","map":{"version":3,"names":["React","useCallback","useQueryClient","Alert","Container","Form","Loading","TodoList","qKeyTodo","qKeyTodoList","useCompleteTodoMutation","useCreateTodoMutation","useRemoveTodoMutation","useTodosQuery","App","queryClient","remove","create","complete","data","isError","isLoading","todoIdList","toggleCompleteFirstTask","cacheData","getQueryData","firstTodo","setQueryData","_data","isComplete","ButtonToggleComplete","styled","input"],"sources":["/Users/alexandersapunkov/Desktop/Projects/todo-react-query-presentation/src/App.js"],"sourcesContent":["import React, { useCallback } from 'react'\n\nimport { useQueryClient } from 'react-query'\nimport styled from 'styled-components/macro'\n\nimport Alert from 'src/components/Alert'\nimport Container from 'src/components/Container'\nimport Form from 'src/components/Form'\nimport Loading from 'src/components/Loading'\nimport TodoList from 'src/components/TodoList'\nimport { qKeyTodo, qKeyTodoList } from 'src/constants'\nimport useCompleteTodoMutation from 'src/data/mutations/useCompleteTodoMutation'\nimport useCreateTodoMutation from 'src/data/mutations/useCreateTodoMutation'\nimport useRemoveTodoMutation from 'src/data/mutations/useRemoveTodoMutation'\nimport useTodosQuery from 'src/data/queries/useTodosQuery'\n\nfunction App() {\n  const queryClient = useQueryClient()\n  const { remove } = useRemoveTodoMutation()\n  const { create } = useCreateTodoMutation()\n  const { complete } = useCompleteTodoMutation()\n\n  const { data, isError, isLoading } = useTodosQuery()\n  const { todoIdList = [] } = data || {}\n\n  const toggleCompleteFirstTask = useCallback(() => {\n    const cacheData = queryClient.getQueryData(qKeyTodoList()) || {}\n    const firstTodo = cacheData?.todoIdList[0]\n\n    if (!firstTodo) return\n\n    queryClient.setQueryData(qKeyTodo(1), (_data) => ({\n      ..._data,\n      isComplete: !_data?.isComplete,\n    }))\n  }, [queryClient])\n\n  return (\n    <Container>\n      {isError && <Alert />}\n\n      {isLoading && <Loading />}\n\n      <TodoList todoIdList={todoIdList} remove={remove} complete={complete} />\n\n      <Form key=\"Form-query\" create={create} />\n\n      <ButtonToggleComplete\n        onClick={toggleCompleteFirstTask}\n        type=\"button\"\n        value=\"Toggle Complete first task\"\n      />\n    </Container>\n  )\n}\n\nexport default App\n\nconst ButtonToggleComplete = styled.input`\n  display: flex;\n  margin-top: 1rem;\n  width: 100%;\n  justify-content: center;\n  padding: 1rem;\n  border-radius: 20rem;\n  background-color: #f9fafbff;\n  box-shadow: -1px 7px 9px -5px rgba(0, 0, 0, 0.37);\n  color: #6b7280ff;\n  border: none;\n\n  :focus {\n    outline: none;\n  }\n  :hover {\n    background-color: #f87171ff;\n  }\n`\n"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AAEA,SAASC,cAAT,QAA+B,aAA/B;AAGA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SAASC,QAAT,EAAmBC,YAAnB,QAAuC,eAAvC;AACA,OAAOC,uBAAP,MAAoC,4CAApC;AACA,OAAOC,qBAAP,MAAkC,0CAAlC;AACA,OAAOC,qBAAP,MAAkC,0CAAlC;AACA,OAAOC,aAAP,MAA0B,gCAA1B;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAMC,WAAW,GAAGb,cAAc,EAAlC;EACA,MAAM;IAAEc;EAAF,IAAaJ,qBAAqB,EAAxC;EACA,MAAM;IAAEK;EAAF,IAAaN,qBAAqB,EAAxC;EACA,MAAM;IAAEO;EAAF,IAAeR,uBAAuB,EAA5C;EAEA,MAAM;IAAES,IAAF;IAAQC,OAAR;IAAiBC;EAAjB,IAA+BR,aAAa,EAAlD;EACA,MAAM;IAAES,UAAU,GAAG;EAAf,IAAsBH,IAAI,IAAI,EAApC;EAEA,MAAMI,uBAAuB,GAAGtB,WAAW,CAAC,MAAM;IAChD,MAAMuB,SAAS,GAAGT,WAAW,CAACU,YAAZ,CAAyBhB,YAAY,EAArC,KAA4C,EAA9D;IACA,MAAMiB,SAAS,GAAGF,SAAH,aAAGA,SAAH,uBAAGA,SAAS,CAAEF,UAAX,CAAsB,CAAtB,CAAlB;IAEA,IAAI,CAACI,SAAL,EAAgB;IAEhBX,WAAW,CAACY,YAAZ,CAAyBnB,QAAQ,CAAC,CAAD,CAAjC,EAAuCoB,KAAD,KAAY,EAChD,GAAGA,KAD6C;MAEhDC,UAAU,EAAE,EAACD,KAAD,aAACA,KAAD,eAACA,KAAK,CAAEC,UAAR;IAFoC,CAAZ,CAAtC;EAID,CAV0C,EAUxC,CAACd,WAAD,CAVwC,CAA3C;EAYA,oBACE,QAAC,SAAD;IAAA,WACGK,OAAO,iBAAI,QAAC,KAAD;MAAA;MAAA;MAAA;IAAA,QADd,EAGGC,SAAS,iBAAI,QAAC,OAAD;MAAA;MAAA;MAAA;IAAA,QAHhB,eAKE,QAAC,QAAD;MAAU,UAAU,EAAEC,UAAtB;MAAkC,MAAM,EAAEN,MAA1C;MAAkD,QAAQ,EAAEE;IAA5D;MAAA;MAAA;MAAA;IAAA,QALF,eAOE,QAAC,IAAD;MAAuB,MAAM,EAAED;IAA/B,GAAU,YAAV;MAAA;MAAA;MAAA;IAAA,QAPF,eASE,QAAC,oBAAD;MACE,OAAO,EAAEM,uBADX;MAEE,IAAI,EAAC,QAFP;MAGE,KAAK,EAAC;IAHR;MAAA;MAAA;MAAA;IAAA,QATF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAiBD;;GAtCQT,G;UACaZ,c,EACDU,qB,EACAD,qB,EACED,uB,EAEgBG,a;;;KAN9BC,G;AAwCT,eAAeA,GAAf;;AAEA,MAAMgB,oBAAoB,GAAGC,OAAM,CAACC,KAAV;EAAA;EAAA;AAAA,qQAA1B;;MAAMF,oB"},"metadata":{},"sourceType":"module"}