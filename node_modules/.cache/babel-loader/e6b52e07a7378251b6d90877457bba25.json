{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback } from 'react';\nimport axios from 'axios';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { qKeyTodo, URL } from 'src/constants';\n\nconst useCompleteTodoMutation = () => {\n  _s();\n\n  const queryClient = useQueryClient();\n  const completeMut = useCallback(async data => {\n    if (data !== null && data !== void 0 && data.isComplete) return; // eslint-disable-next-line no-useless-catch\n\n    try {\n      return axios.patch(`${URL}/todos/${data.id}`, { ...data,\n        isComplete: true\n      }).then(res => {\n        queryClient.setQueryData(qKeyTodo(data.id), cacheData => ({ ...cacheData,\n          isComplete: true\n        }));\n        return res.data;\n      });\n    } catch (err) {\n      throw err;\n    }\n  }, [queryClient]);\n  const {\n    mutateAsync: complete,\n    isLoading,\n    error\n  } = useMutation(completeMut, {// onSuccess: () => queryClient.invalidateQueries(qKeyTodoList()),\n  });\n  return {\n    complete,\n    errorComplete: error,\n    isCompleting: isLoading\n  };\n};\n\n_s(useCompleteTodoMutation, \"WWOEqrM6kT0Gbi2pzGO/SoDkGNA=\", false, function () {\n  return [useQueryClient, useMutation];\n});\n\nexport default useCompleteTodoMutation;","map":{"version":3,"names":["useCallback","axios","useMutation","useQueryClient","qKeyTodo","URL","useCompleteTodoMutation","queryClient","completeMut","data","isComplete","patch","id","then","res","setQueryData","cacheData","err","mutateAsync","complete","isLoading","error","errorComplete","isCompleting"],"sources":["/Users/alexandersapunkov/Desktop/Projects/todo-react-query-presentation/src/data/mutations/useCompleteTodoMutation.js"],"sourcesContent":["import { useCallback } from 'react'\n\nimport axios from 'axios'\nimport { useMutation, useQueryClient } from 'react-query'\n\nimport { qKeyTodo, URL } from 'src/constants'\n\nconst useCompleteTodoMutation = () => {\n  const queryClient = useQueryClient()\n\n  const completeMut = useCallback(\n    async (data) => {\n      if (data?.isComplete) return\n\n      // eslint-disable-next-line no-useless-catch\n      try {\n        return axios\n          .patch(`${URL}/todos/${data.id}`, { ...data, isComplete: true })\n          .then((res) => {\n            queryClient.setQueryData(qKeyTodo(data.id), (cacheData) => ({\n              ...cacheData,\n              isComplete: true,\n            }))\n\n            return res.data\n          })\n      } catch (err) {\n        throw err\n      }\n    },\n    [queryClient],\n  )\n\n  const {\n    mutateAsync: complete,\n    isLoading,\n    error,\n  } = useMutation(completeMut, {\n    // onSuccess: () => queryClient.invalidateQueries(qKeyTodoList()),\n  })\n\n  return {\n    complete,\n    errorComplete: error,\n    isCompleting: isLoading,\n  }\n}\n\nexport default useCompleteTodoMutation\n"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,OAA5B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,cAAtB,QAA4C,aAA5C;AAEA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,eAA9B;;AAEA,MAAMC,uBAAuB,GAAG,MAAM;EAAA;;EACpC,MAAMC,WAAW,GAAGJ,cAAc,EAAlC;EAEA,MAAMK,WAAW,GAAGR,WAAW,CAC7B,MAAOS,IAAP,IAAgB;IACd,IAAIA,IAAJ,aAAIA,IAAJ,eAAIA,IAAI,CAAEC,UAAV,EAAsB,OADR,CAGd;;IACA,IAAI;MACF,OAAOT,KAAK,CACTU,KADI,CACG,GAAEN,GAAI,UAASI,IAAI,CAACG,EAAG,EAD1B,EAC6B,EAAE,GAAGH,IAAL;QAAWC,UAAU,EAAE;MAAvB,CAD7B,EAEJG,IAFI,CAEEC,GAAD,IAAS;QACbP,WAAW,CAACQ,YAAZ,CAAyBX,QAAQ,CAACK,IAAI,CAACG,EAAN,CAAjC,EAA6CI,SAAD,KAAgB,EAC1D,GAAGA,SADuD;UAE1DN,UAAU,EAAE;QAF8C,CAAhB,CAA5C;QAKA,OAAOI,GAAG,CAACL,IAAX;MACD,CATI,CAAP;IAUD,CAXD,CAWE,OAAOQ,GAAP,EAAY;MACZ,MAAMA,GAAN;IACD;EACF,CAnB4B,EAoB7B,CAACV,WAAD,CApB6B,CAA/B;EAuBA,MAAM;IACJW,WAAW,EAAEC,QADT;IAEJC,SAFI;IAGJC;EAHI,IAIFnB,WAAW,CAACM,WAAD,EAAc,CAC3B;EAD2B,CAAd,CAJf;EAQA,OAAO;IACLW,QADK;IAELG,aAAa,EAAED,KAFV;IAGLE,YAAY,EAAEH;EAHT,CAAP;AAKD,CAvCD;;GAAMd,uB;UACgBH,c,EA6BhBD,W;;;AAWN,eAAeI,uBAAf"},"metadata":{},"sourceType":"module"}