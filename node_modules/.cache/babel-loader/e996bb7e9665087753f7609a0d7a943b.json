{"ast":null,"code":"var _jsxFileName = \"/Users/alexandersapunkov/Desktop/Projects/todo-react-query-presentation/src/index.js\";\nimport React, { StrictMode } from 'react';\nimport { createRoot } from 'react-dom/client';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { ReactQueryDevtools } from 'react-query/devtools';\nimport 'src/reset.css';\nimport 'src/index.css';\nimport App from 'src/App';\nimport { AppProvider } from 'src/data/contexts/AppProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      cacheTime: Infinity,\n      refetchOnMount: false,\n      refetchOnWindowFocus: false,\n      refetchOnReconnect: false\n    }\n  }\n});\nconst container = document.getElementById('root');\nconst root = createRoot(container); // createRoot(container!) if you use TypeScript\n\nroot.render( /*#__PURE__*/_jsxDEV(StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(QueryClientProvider, {\n    client: queryClient,\n    children: [/*#__PURE__*/_jsxDEV(AppProvider, {\n      children: /*#__PURE__*/_jsxDEV(App, {\n        tab: \"home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactQueryDevtools, {\n      initialIsOpen: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 27,\n  columnNumber: 3\n}, this));","map":{"version":3,"names":["React","StrictMode","createRoot","QueryClient","QueryClientProvider","ReactQueryDevtools","App","AppProvider","queryClient","defaultOptions","queries","cacheTime","Infinity","refetchOnMount","refetchOnWindowFocus","refetchOnReconnect","container","document","getElementById","root","render"],"sources":["/Users/alexandersapunkov/Desktop/Projects/todo-react-query-presentation/src/index.js"],"sourcesContent":["import React, { StrictMode } from 'react'\n\nimport { createRoot } from 'react-dom/client'\nimport { QueryClient, QueryClientProvider } from 'react-query'\nimport { ReactQueryDevtools } from 'react-query/devtools'\nimport 'src/reset.css'\nimport 'src/index.css'\n\nimport App from 'src/App'\nimport { AppProvider } from 'src/data/contexts/AppProvider'\n\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      cacheTime: Infinity,\n      refetchOnMount: false,\n      refetchOnWindowFocus: false,\n      refetchOnReconnect: false,\n    },\n  },\n})\n\nconst container = document.getElementById('root')\nconst root = createRoot(container) // createRoot(container!) if you use TypeScript\n\nroot.render(\n  <StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <AppProvider>\n        <App tab=\"home\" />\n      </AppProvider>\n\n      <ReactQueryDevtools initialIsOpen={false} />\n    </QueryClientProvider>\n  </StrictMode>,\n)\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,WAAT,EAAsBC,mBAAtB,QAAiD,aAAjD;AACA,SAASC,kBAAT,QAAmC,sBAAnC;AACA,OAAO,eAAP;AACA,OAAO,eAAP;AAEA,OAAOC,GAAP,MAAgB,SAAhB;AACA,SAASC,WAAT,QAA4B,+BAA5B;;AAEA,MAAMC,WAAW,GAAG,IAAIL,WAAJ,CAAgB;EAClCM,cAAc,EAAE;IACdC,OAAO,EAAE;MACPC,SAAS,EAAEC,QADJ;MAEPC,cAAc,EAAE,KAFT;MAGPC,oBAAoB,EAAE,KAHf;MAIPC,kBAAkB,EAAE;IAJb;EADK;AADkB,CAAhB,CAApB;AAWA,MAAMC,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAlB;AACA,MAAMC,IAAI,GAAGjB,UAAU,CAACc,SAAD,CAAvB,C,CAAmC;;AAEnCG,IAAI,CAACC,MAAL,eACE,QAAC,UAAD;EAAA,uBACE,QAAC,mBAAD;IAAqB,MAAM,EAAEZ,WAA7B;IAAA,wBACE,QAAC,WAAD;MAAA,uBACE,QAAC,GAAD;QAAK,GAAG,EAAC;MAAT;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAKE,QAAC,kBAAD;MAAoB,aAAa,EAAE;IAAnC;MAAA;MAAA;MAAA;IAAA,QALF;EAAA;IAAA;IAAA;IAAA;EAAA;AADF;EAAA;EAAA;EAAA;AAAA,QADF"},"metadata":{},"sourceType":"module"}